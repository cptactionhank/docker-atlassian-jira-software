#!/usr/bin/env sh

# Usage: bin/prepare [VERSION]
#
# Prepares the current directory according to the given Atlassian JIRA
# VERSION. If no VERSION information is specified the latest version is
# retrieved from the Atlassian JIRA download feed.

if [ "$(git rev-parse --abbrev-ref HEAD)" != "master" ] then
	echo "Not master branch and therefore nothing to prepare"
	exit 0
fi

echo "Obtaining Altassian JIRA version information..."

JIRA_ENV_RE="ENV JIRA_VERSION[[:space:]]*(.+)"

# Obtain the currently latest version of Atlassian JIRA version defined by the
# Dockerfile in this repository.
CURRENT_VERSION=$(sed -nr "s/${JIRA_ENV_RE}/\1/p" Dockerfile)

# Obtain the latest Atlassian JIRA version by going to the JSON version feed
# information to get a JSONP formatted response, strip the output to retrieve
# the actual content and then get the version number from the first entry.
curl -Ls 'https://my.atlassian.com/download/feeds/current/jira-software.json' | sed 's/downloads(\(.*\))/\1/g' | jq -r '.[] | select(.description | test("TAR\\.GZ Archive")) | select(.zipUrl | test("software-8")) | .version' | while read -r VERSION
do

	echo "Found versions:"
	echo "  Current: ${CURRENT_VERSION}"
	echo "  Latest:  ${VERSION}"
	echo ""

	echo "Preparing branch for version new Atlassian JIRA version"

	# Edit the `Dockerfile` by changing the current version to the new obtained
	# version from the Atlassian JIRA version feed.
        sed --in-place -r "s/${JIRA_ENV_RE}/ENV JIRA_VERSION  ${VERSION}/g" Dockerfile

	echo "Ready for acceptance testing"

done
